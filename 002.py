# Even Fibonacci numbers

# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values
# do not exceed four million, find the sum of the even-valued terms.
import time

start_time = time.time()

f0 = 1
f1 = 1
sum_even = 0
new_val = 0
while new_val < 4000000:
    new_val = f0 + f1
    if new_val % 2 == 0:
        sum_even += new_val
    f0 = f1
    f1 = new_val

print(sum_even)
seconds = time.time() - start_time
print('Time Taken:', time.strftime("%H:%M:%S", time.gmtime(seconds)))
print("--- %s seconds ---" % (time.time() - start_time))
